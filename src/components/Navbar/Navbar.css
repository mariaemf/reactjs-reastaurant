.app__navbar {
  width: 100%;
  /*usada para definir largura de um elemento -> ocupando 100% do elemetno pai*/
  display: flex;
  /*usada para deixar um container flexivel */
  /*border: 2px solid black;
  para definir o px das bordas e as cores*/
  justify-content: space-between;
  /*para alinhar um item ao inicio e outro no fim*/
  align-items: center;
  /*para alinhar o item ao centro do container*/
  background: var(--color-black);
  color: aliceblue;
  padding: 1rem 2rem;
  /*para definir espaçamento entre conteudo e sua borda -> definindo diferente valores de preenchimento para cada lado do elemento
  1rem = para o topo e base e 2rem+> para preenchimento nas laterais = direita e esquerda*/
}

.app__navbar-logo {
  display: flex;
  justify-content: flex-start;
  /*serve para alinhar itens em um container flex ao eixo principal (horizontal) é uma propriedade que pode ser usada para jusfity-content, usada para alinhar itens ao inicio do container flex = itens são posicionados no início do container flex, seguindo a direção do eixo principal. */
  align-items: center;
}

.app__navbar-logo img {
  width: 150px;
}

.app__navbar-links {
  flex: 1;
  /*um elemento filho dentro de um container flexível, você está dizendo que este elemento deve crescer para preencher todo o espaço disponível no container flexível que não foi ocupado pelos outros elementos. */
  display: flex;
  justify-content: center;
  align-items: center;


  list-style: none;
  /*para tirar padrao*/

}

.app__navbar-links li {
  margin: 0 1rem;
  /*espaçamento em torno do elemento = definindo margin de 0px para topo e base do elemento, e uma margem de 1rem do lado esquerdo e direito = ous eja, tera espaço em branco de 1rem na esquerda e dirieta*/
  cursor: pointer;
}

.app__navbar-links li:hover {
  color: var(--color-grey);
}

.app__navbar-login {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.app__navbar-login a {
  margin: 0 1rem;
  text-decoration: none;
  transition: 0.5s ease;
}

.app__navbar-login a:hover {
  border-bottom: 1px solid var(--color-golden);
  /*define a borda do elemento = 1px  define a espessura da borda inferior, solid = define o estilo da borda, nesse caso uma linha sólida, e o var define a cor da borda */
  transition: 2s;
}

.app__navbar-login div {
  width: 1px;
  height: 30px;
  background-color: var(--color-grey);
}

.app__navbar-smallscreen {
  display: none;
}

.app__navbar-smallscren__overlay {
  position: fixed;
  /*position fixed serve para fixar um elemento na posicao desejada da pagina =ou seja, o elemnto permanecerá no mesmo lugar da tela, meso que o usuário role a pagina */
  top: 0;
  /*valor 0 para o topo */
  left: 0;
  /*significa que o elemento será colocado no canto superior do lado esquerdo da página*/
  width: 100%;
  /*largura do elemento, demonstrando que ele ocupara toda a tela*/
  height: 100vh;
  /*altura do elementoesta definida como vh (altura da janela do navegador) 1vh = 1% da altura do viewport, entao esse 100vh define a altura do elemento sendo igual a altura da janela do navegador =>  útil para criar elementos que ocupam a tela inteira, como fundos de página, seções de tela cheia, entre outros. */
  background: var(--color-black);
  flex-direction: column;
  /*define a direção dos eixos principais usados pelo sistema do flexbox ===> Por exemplo, se tivermos um container flexível com quatro elementos filho, e definirmos flex-direction: column, esses elementos serão organizados em uma única coluna vertical, em que o primeiro elemento estará no topo e o último no final da coluna.*/
  z-index: 5;
  /*define a ordem de empilhamento do elemento em relação a outros elementos. Quanto maior o valor de z-index, maior é a prioridade de exibição do elemento em relação aos demais.*/
}

.app__navbar-smallscren__overlay .overlay__close {
  font-size: 27px;
  color: var(--color-golden);
  cursor: pointer;

  position: absolute;
  /*posiciona o elemento em relacao ao elemento pai mais proximo que tnha uma posicao definida => quando definimos um elemento como absolute podemos usar as propriedades top, bottom, left, right para especificar a posicao do elemento pai*/
  top: 20px;
  right: 20px;
}

@media screen and (max-width: 1150px) {
  .app__navbar-links {
    display: none;
  }

  .app__navbar-smallscreen {
    display: flex;
  }
}